version: 1
descriptor_core_version: 1
descriptors {
  id: "tensorflow_extension"
  version: 1
}
graphs {
  id: "main"
  nodes {
    id: "fc2/Relu"
    inputs: "fc2/add"
    inputs: "fc2/Relu/shape"
    operation: "Reshape"
  }
  nodes {
    id: "fc2/Relu/shape"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 2
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_fc2/Relu/shape"
      }
    }
  }
  nodes {
    id: "fc2/add"
    inputs: "fc2/MatMul"
    inputs: "fc2/Variable_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "fc2/Variable_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 10
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_fc2/Variable_1"
      }
    }
  }
  nodes {
    id: "fc2/MatMul"
    inputs: "fc1/Relu"
    inputs: "fc2/Variable"
    operation: "FullyConnected"
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_NC_CK"
      }
    }
  }
  nodes {
    id: "fc2/Variable"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
          val: 10
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_fc2/Variable"
      }
    }
  }
  nodes {
    id: "fc1/Relu"
    inputs: "fc1/add"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu"
      }
    }
  }
  nodes {
    id: "fc1/add"
    inputs: "fc1/MatMul"
    inputs: "fc1/Variable_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "fc1/Variable_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_fc1/Variable_1"
      }
    }
  }
  nodes {
    id: "fc1/MatMul"
    inputs: "conv2/Reshape"
    inputs: "fc1/Variable"
    operation: "FullyConnected"
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_NC_CK"
      }
    }
  }
  nodes {
    id: "fc1/Variable"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 3136
          val: 1024
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_fc1/Variable"
      }
    }
  }
  nodes {
    id: "conv2/Reshape"
    inputs: "conv2/MaxPool"
    inputs: "conv2/Reshape/shape"
    operation: "Reshape"
  }
  nodes {
    id: "conv2/Reshape/shape"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_INT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 2
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_conv2/Reshape/shape"
      }
    }
  }
  nodes {
    id: "conv2/MaxPool"
    inputs: "conv2/Relu_1"
    operation: "Pool"
    fields {
      key: "func"
      value {
        s: "max"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
    fields {
      key: "kernel"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "conv2/Relu_1"
    inputs: "conv2/Relu"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu"
      }
    }
  }
  nodes {
    id: "conv2/Relu"
    inputs: "conv2/BiasAdd"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu"
      }
    }
  }
  nodes {
    id: "conv2/Variable_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_conv2/Variable_1"
      }
    }
  }
  nodes {
    id: "conv2/BiasAdd"
    inputs: "conv2/Conv2D"
    inputs: "conv2/Variable_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "conv2/Conv2D"
    inputs: "conv1/MaxPool"
    inputs: "conv2/Variable"
    operation: "Conv"
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "padding"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "conv2/Variable"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 5
          val: 5
          val: 32
          val: 64
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_conv2/Variable"
      }
    }
  }
  nodes {
    id: "conv1/MaxPool"
    inputs: "conv1/Relu_1"
    operation: "Pool"
    fields {
      key: "func"
      value {
        s: "max"
      }
    }
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C"
      }
    }
    fields {
      key: "kernel"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
  }
  nodes {
    id: "conv1/Relu_1"
    inputs: "conv1/Relu"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu"
      }
    }
  }
  nodes {
    id: "conv1/Relu"
    inputs: "conv1/BiasAdd"
    operation: "Activation"
    fields {
      key: "func"
      value {
        s: "relu"
      }
    }
  }
  nodes {
    id: "conv1/Variable_1"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_conv1/Variable_1"
      }
    }
  }
  nodes {
    id: "conv1/BiasAdd"
    inputs: "conv1/Conv2D"
    inputs: "conv1/Variable_1"
    operation: "Binary"
    fields {
      key: "func"
      value {
        s: "add"
      }
    }
  }
  nodes {
    id: "conv1/Conv2D"
    inputs: "Placeholder"
    inputs: "conv1/Variable"
    operation: "Conv"
    fields {
      key: "inputs_orders"
      value {
        ref: "orders_N+C_+CK"
      }
    }
    fields {
      key: "padding"
      value {
        i_list {
          val: 2
          val: 2
        }
      }
    }
    fields {
      key: "strides"
      value {
        i_list {
          val: 1
          val: 1
        }
      }
    }
  }
  nodes {
    id: "conv1/Variable"
    operation: "Const"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: 5
          val: 5
          val: 1
          val: 32
        }
      }
    }
    fields {
      key: "values"
      value {
        ref: "weights_conv1/Variable"
      }
    }
  }
  nodes {
    id: "Placeholder"
    operation: "Input"
    fields {
      key: "dtype"
      value {
        dtype: DT_FLOAT32
      }
    }
    fields {
      key: "shape"
      value {
        i_list {
          val: -1
          val: 28
          val: 28
          val: 1
        }
      }
    }
  }
  nodes {
    id: "MarkOutput_0"
    inputs: "fc2/Relu"
    operation: "MarkOutput"
  }
}
referenced_data {
  key: "orders_N+C"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 2
            val: 2147483647
            val: 1
          }
        }
      }
    }
  }
}
referenced_data {
  key: "orders_N+C_+CK"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 2
            val: 2147483647
            val: 1
          }
        }
      }
      val {
        orders {
          key: -1
          value {
            val: 2
            val: 2147483647
            val: 1
            val: 0
          }
        }
      }
    }
  }
}
referenced_data {
  key: "orders_NC_CK"
  value {
    dim_orders_list {
      val {
        orders {
          key: -1
          value {
            val: 0
            val: 1
          }
        }
      }
      val {
        orders {
          key: -1
          value {
            val: 1
            val: 0
          }
        }
      }
    }
  }
}
referenced_data {
  key: "weights_conv1/Variable"
  value {
    blob: "(...3200 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_conv1/Variable_1"
  value {
    blob: "(...128 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_conv2/Reshape/shape"
  value {
    blob: "\377\377\377\377@\014\000\000"
  }
}
referenced_data {
  key: "weights_conv2/Variable"
  value {
    blob: "(...204800 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_conv2/Variable_1"
  value {
    blob: "(...256 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_fc1/Variable"
  value {
    blob: "(...12845056 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_fc1/Variable_1"
  value {
    blob: "(...4096 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_fc2/Relu/shape"
  value {
    blob: "\377\377\377\377\n\000\000\000"
  }
}
referenced_data {
  key: "weights_fc2/Variable"
  value {
    blob: "(...40960 bytes skipped...)"
  }
}
referenced_data {
  key: "weights_fc2/Variable_1"
  value {
    blob: "(...40 bytes skipped...)"
  }
}
